# What it is: Distribute incoming traffic across multiple backend servers for scalability and fault tolerance.
# Use Case: Handle high traffic or distribute load between multiple app instances.

upstream frontend {
  server 127.0.0.1:3000;
  server 127.0.0.1:3001;
  server 127.0.0.1:3002;
}

server {
  listen 80;
  server_name app.okala.com;

  location / {
    proxy_pass http://frontend;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
  }
}

# Explanation: Nginx will round-robin requests between the 3 backend servers.
# Helps balance traffic, reduce load on each server.

# =====================================================================================

http {
  upstream backend_servers {
    server 192.168.1.10;
    server 192.168.1.11;
  }

  server {
    listen 80;
    server_name okala.com;

    location / {
      proxy_pass http://backend_servers;
    }
  }
}

# This config distributes traffic between two backend servers:

