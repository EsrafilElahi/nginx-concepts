# What it is: Store responses from the backend temporarily so repeated requests donâ€™t hit the backend every time.
# Use Case: Improve performance and reduce backend load for repeated API calls or content.

proxy_cache_path /tmp/nginx_cache levels=1:2 keys_zone=STATIC:10m inactive=60m use_temp_path=off;

server {
  listen 80;
  server_name cache.okala.com;

  location /api/ {
    proxy_cache STATIC;
    proxy_pass http://localhost:3000;
    proxy_cache_valid 200 1h;
    add_header X-Cache-Status $upstream_cache_status;
  }
}

# Explanation: Responses from /api/ are cached in /tmp/nginx_cache for 1 hour if they return 200 OK.
# X-Cache-Status header tells if response came from cache (HIT, MISS, etc).

# =====================================================================================

proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:10m max_size=1g inactive=60m use_temp_path=off;

server {
  listen 80;
  server_name okala.com;

  location / {
    proxy_cache my_cache;
    proxy_cache_valid 200 10m;
    proxy_pass http://backend_server;
  }
}

# The following okala enables caching of HTTP responses for 10 minutes: